package threading;

import java.util.HashMap;
import java.util.Map;

class DemoThread extends Thread{

	/*public void start() {
		super.start();
		System.out.println("start");
	}*/
	public void run() {
		System.out.println("run");
	}
	
}

public class Demo{
	public static void main(String args[]) {
/*		DemoThread demoThread = new DemoThread();
		demoThread.start();
		//demoThread.start();
		System.out.println("main");
		Semaphore a = new Semaphore(5); 
		try {
			a.acquire(8);
			a.release(8);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		*/
		String a = "ish";
		String b = "ijkss";
		Map<Character, Integer> map = new HashMap<>();
		boolean o = false; 
		for (int k = 0; k < b.length(); k++){
		     char letter = b.charAt(k);    

		    if( ! map.containsKey(letter)){
		        map.put( letter, 1 );
		    } else {
		        Integer frequency = map.get( letter );
		        map.put( letter, ++frequency );
		    }
		}
		for (int k = 0; k < a.length(); k++){
		    char letter = a.charAt(k);

		    if( ! map.containsKey( letter ) )
		       o = false;

		    Integer frequency = map.get( letter );

		     if( frequency == 0 )
		        o = false;
		    else    
		        map.put( letter, --frequency);
		}
		System.out.println(map);
		o = true;
		
		
	}
}
